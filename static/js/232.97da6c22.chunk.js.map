{"version":3,"file":"static/js/232.97da6c22.chunk.js","mappings":"oRAEaA,EAAOC,EAAAA,EAAAA,KAAH,yCAIJC,EAAUD,EAAAA,EAAAA,IAAH,gD,UCgFpB,EA/EkB,WAEhB,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAEjC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACJV,EACFW,MAAMX,IAENK,EAAS,IACTE,EAAY,IACZE,GAAW,GAEd,GAAE,CAACT,IAEJ,IAAMY,GAAaC,EAAAA,EAAAA,cAAY,WAC7BJ,EACEL,EAAMU,OAAOC,OAAS,GACnBT,EAASQ,OAAOC,OAAS,EAE/B,GAAE,CAACX,EAAOE,KAEXI,EAAAA,EAAAA,YAAU,WACRE,GACD,GAAE,CAACR,EAAOE,EAAUM,IAErB,IAAMI,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,OAAQA,EAAOC,MACb,IAAK,QACH,OAAOb,EAASY,EAAOE,OACzB,IAAK,WACH,OAAOZ,EAAYU,EAAOE,OAC5B,QACE,OAEL,EAUD,OACE,UAACxB,EAAD,CAAMyB,SATa,SAACC,GACpBA,EAAEC,iBAEF,IAAMC,EAAW,CAAEnB,MAAAA,EAAOE,SAAAA,GAE1BR,GAAS0B,EAAAA,EAAAA,IAAMD,GAChB,EAGC,WAEE,SAAC1B,EAAD,WACE,SAAC4B,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,WACRC,KAAK,QACLV,KAAK,QACLC,MAAOf,EACPyB,SAAUb,OAId,SAACnB,EAAD,WACE,SAAC4B,EAAA,EAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACLV,KAAK,WACLC,MAAOb,EACPuB,SAAUb,MAIZR,IAAW,SAACsB,EAAA,EAAD,CAAQH,QAAQ,WAAWC,KAAK,SAAhC,SAAyC,aAG3D,E,UCrED,EAZc,WACZ,OACE,iCACE,SAACG,EAAA,EAAD,CAAYJ,QAAQ,KAAKK,UAAU,KAAnC,SAAwC,YAIxC,SAAC,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 320px;\n`;\n\nexport const FormRow = styled.div`\n  margin-bottom: 20px;\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getErrorAuth } from '../../redux/auth/authSelectors';\nimport { login } from '../../redux/auth/authOperation';\nimport { Button, TextField } from '@mui/material';\nimport { Form, FormRow } from './LoginForm.styled';\n\nconst LoginForm = () => {\n\n  const dispatch = useDispatch();\n  const errorRequest = useSelector(getErrorAuth);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    if (errorRequest) {\n      alert(errorRequest);\n    } else {\n      setEmail('');\n      setPassword('');\n      setIsValid(false);\n    }\n  }, [errorRequest]);\n\n  const checkValid = useCallback(() => {\n    setIsValid(\n      email.trim().length > 0\n      && password.trim().length > 0\n    );\n  }, [email, password]);\n\n  useEffect(() => {\n    checkValid();\n  }, [email, password, checkValid]);\n\n  const handleChange = ({ target }) => {\n    switch (target.name) {\n      case 'email':\n        return setEmail(target.value);\n      case 'password':\n        return setPassword(target.value);\n      default:\n        return;\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const dataUser = { email, password };\n\n    dispatch(login(dataUser));\n  };\n\n  return (\n    <Form onSubmit={ handleSubmit }>\n\n      <FormRow>\n        <TextField\n          label='Email'\n          variant='standard'\n          type='email'\n          name='email'\n          value={email}\n          onChange={handleChange}\n        />\n      </FormRow>\n\n      <FormRow>\n        <TextField\n          label='Password'\n          variant='standard'\n          type='password'\n          name='password'\n          value={password}\n          onChange={handleChange}\n        />\n      </FormRow>\n\n      { isValid && <Button variant=\"outlined\" type=\"submit\">Log In</Button> }\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from '../components/LoginForm';\nimport { Typography } from '@mui/material';\n\nconst Login = () => {\n  return (\n    <>\n      <Typography variant=\"h3\" component=\"h2\">\n        Log In\n      </Typography>\n\n      <LoginForm/>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["Form","styled","FormRow","dispatch","useDispatch","errorRequest","useSelector","getErrorAuth","useState","email","setEmail","password","setPassword","isValid","setIsValid","useEffect","alert","checkValid","useCallback","trim","length","handleChange","target","name","value","onSubmit","e","preventDefault","dataUser","login","TextField","label","variant","type","onChange","Button","Typography","component"],"sourceRoot":""}