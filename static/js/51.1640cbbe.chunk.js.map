{"version":3,"file":"static/js/51.1640cbbe.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","redux/filter/filterSelector.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getAllContacts = state => state.contacts.items;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  border: 1px solid #ccc;\n  padding: 30px 20px 20px;\n  margin-bottom: 40px;\n`;\n\nexport const FormRow = styled.div`\n  margin-bottom: 20px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllContacts } from '../../redux/contacts/contactsSelectors';\nimport { addContact } from '../../redux/contacts/contactsOperations';\n\nimport { Container, FormRow } from './ContactForm.styled';\nimport { Button, TextField } from '@mui/material';\n\nconst ContactForm = () => {\n\n  const contacts = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleAddUser = (user) => {\n\n    const repeated = contacts.find(({ name }) => name === user.name);\n\n    if (repeated) {\n      alert(`${user.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(user));\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isInvalid()) return;\n\n    const user = {\n      name,\n      phone,\n    };\n\n    handleAddUser(user);\n\n    clearForm();\n  }\n\n  const handleInput = (e) => {\n    const target = e.target;\n\n    switch (target.name) {\n      case 'name':\n        setName(target.value);\n        break;\n      case 'phone':\n        setPhone(target.value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  const clearForm = () => {\n    setName('');\n    setPhone('');\n  }\n\n  const isInvalid = () => {\n    return !(name.length > 0 && phone.length > 0);\n  }\n\n  return (\n    <Container>\n      <form onSubmit={ handleSubmit }>\n\n        <FormRow>\n          <TextField\n            label=\"Name\"\n            variant=\"standard\"\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={ name }\n            onChange={ handleInput }\n          />\n        </FormRow>\n\n        <FormRow>\n          <TextField\n            label=\"Number\"\n            variant=\"standard\"\n            type=\"tel\"\n            name=\"phone\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={ phone }\n            onChange={ handleInput }\n          />\n        </FormRow>\n\n        <FormRow>\n          <Button\n            variant=\"outlined\"\n            type=\"submit\"\n          >\n            Add contact\n          </Button>\n        </FormRow>\n      </form>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-bottom: 40px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeFilterReducer } from '../../redux/filter/filterSlice';\nimport { TextField } from '@mui/material';\n\nimport { Container } from './Filter.styled';\n\nconst Filter = () => {\n\n  const dispatch = useDispatch();\n\n  const [valueFilter, setValueFilter] = useState('');\n\n  const handleChange = (e) => {\n    setValueFilter(e.target.value);\n    dispatch(changeFilterReducer(e.target.value));\n  }\n\n  return (\n    <Container>\n\n      <TextField\n        label=\"Search...\"\n        variant=\"standard\"\n        type=\"text\"\n        name=\"filter\"\n        value={ valueFilter }\n        onChange={ handleChange }\n      />\n\n    </Container>\n  );\n};\n\nexport default Filter;\n","import \"./Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loader__spinner\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n      </div>\n  );\n};\n\nexport default Loader;\n","export const getFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Item = styled.li`\n  font-weight: 800;\n  margin-bottom: 16px;\n\n  span {\n    font-weight: 400;\n  }\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  color: tomato;\n`;\n","import Loader from '../Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/contactsOperations';\nimport { getFilter } from '../../redux/filter/filterSelector';\nimport { BsFillXCircleFill } from \"react-icons/bs\";\n\nimport { Button, Item, List } from './ContactsList.styled';\n\nconst ContactsList = () => {\n\n  const { items, error, isLoading } = useSelector(state => state.contacts);\n  const filterState = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = async (id) => {\n    await dispatch(deleteContact(id));\n  }\n\n  const getVisibleItems = () => {\n    return items.filter(({ name }) => name.toLowerCase().includes(filterState.toLowerCase()));\n  }\n\n  const listContacts = getVisibleItems().map(({ id, name, phone }) => {\n    return (\n      <Item key={ id }>\n        { name }: <span>{ phone }</span>\n        <Button\n          type=\"button\"\n          onClick={() => handleDelete(id)}\n        >\n          <BsFillXCircleFill/>\n        </Button>\n      </Item>\n    );\n  });\n\n  return (\n    <>\n      { isLoading && <Loader/> }\n      {\n        items && (\n          <List>\n            {listContacts}\n          </List>\n        )\n      }\n      { error && <h2>Error</h2> }\n    </>\n  );\n};\n\nexport default ContactsList;\n","import { Typography } from '@mui/material';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactsList from '../components/ContactsList';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Typography variant=\"h3\" component=\"h2\">\n        Contacts\n      </Typography>\n\n      <ContactForm/>\n\n      <Filter/>\n\n      <ContactsList/>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["getAllContacts","state","contacts","items","Container","styled","FormRow","useSelector","dispatch","useDispatch","useState","name","setName","phone","setPhone","handleInput","e","target","value","clearForm","isInvalid","length","onSubmit","preventDefault","user","find","alert","addContact","handleAddUser","TextField","label","variant","type","title","required","onChange","Button","valueFilter","setValueFilter","changeFilterReducer","className","getFilter","filter","List","Item","error","isLoading","filterState","useEffect","fetchContacts","handleDelete","id","deleteContact","listContacts","toLowerCase","includes","map","onClick","Typography","component"],"sourceRoot":""}